#! /bin/sh
# Make usage of "dpkg-diversion" really easy for --local diversions. Just pass
# the files to be diverted or already diverted as arguments. The diversion
# status of the argument files will be toggled.
#
# Version 2017.355
#
# Copyright (c) 2017 Guenther Brunthaler. All rights reserved.
# 
# This source file is free software.
# Distribution is permitted under the terms of the GPLv3.

set -e
trap 'test $? = 0 || echo "$0 failed!" >& 2' 0

emul=
default_ext=.disabled
dist_ext=.distrib
common_ext="$default_ext $dist_ext"
ext=
while getopts dnx: opt
do
	case $opt in
		n) emul=echo;;
		x) ext=$OPTARG; test "$ext";;
		d) ext=$dist_ext;;
		*) false || exit
	esac
done
shift `expr $OPTIND - 1 || :`

for d
do
	test -f "$d"
done

cdir=`pwd`
test -d "$cdir"
test "${cdir#/}" != "$cdir"

for d
do
	case $d in
		/*) ;;
		*) d=${cdir%%/}/$d
	esac
	cext=$ext
	if test -z "$cext"
	then
		# No extension has been explicitly specified. Check for common
		# ones.
		for pext in $common_ext
		do
			if test "${d%"$pext"}" != "$d"
			then
				cext=$pext
				break
			fi
		done
		# If no common extension did match, use the default.
		test -z "$cext" && cext=$default_ext
	fi
	o=${d%"$cext"}
	if test "$o" = "$d"
	then
		d=$o$cext
		$emul dpkg-divert --local --rename --divert "$d" -- "$o"
		$emul test -e "$d"
		$emul test ! -e "$o"
	else
		$emul dpkg-divert --rename --remove -- "$o"
		$emul test ! -e "$d"
		$emul test -e "$o"
	fi
done
